input {
  file {
      path => "/etc/logstash/conf.d/data/bikes.csv"
      start_position => "beginning"
  }
}
filter {
  csv {
    skip_header => true
    columns => ["bike_id","latitude","longitude"]
    separator => ","
  }
  mutate {
    add_field => {
      "location" => "POINT (%{longitude} %{latitude})"
    }
  }
  mutate {
    remove_field => ["message", "host", "path"]
  }

  elasticsearch {
    hosts => ["https://28c933e7f525411f803acfae90bab76f.ap-southeast-1.aws.found.io:9243"]
    user => "elastic"
    password => "vAORFH0zJtacsFnjBOkURKtj"
    index => "parking_zones"
    query_template => "/etc/logstash/conf.d/data/template-zone-search.json"
    fields => { "[zone_id]" => "_parking_zone_id" }
  }
  if ([_parking_zone_id]) {
    mutate {
      add_field => {
        "parking_zone_id" => "%{_parking_zone_id}"
        "nearest_parking_zone_id" => "0"
      }
    }
  }
  else {
    mutate {
      add_field => {
        "parking_zone_id" => "0"
      }
    }
    elasticsearch {
      hosts => ["https://28c933e7f525411f803acfae90bab76f.ap-southeast-1.aws.found.io:9243"]
      user => "elastic"
      password => "vAORFH0zJtacsFnjBOkURKtj"
      index => "parking_zones"
      query_template => "/etc/logstash/conf.d/data/template-zone-nearest.json"
      fields => { "[zone_id]" => "_nearest_parking_zone_id" }
    }
    if ([_nearest_parking_zone_id]) {
      mutate {
        add_field => {
          "nearest_parking_zone_id" => "%{_nearest_parking_zone_id}"
        }
      }
    }
    else {
      mutate {
        add_field => {
          "nearest_parking_zone_id" => "0"
        }
      }
    }
    mutate {
      remove_field => ["_nearest_parking_zone_id"]
    }
  }
  # ES Query to fetch the operation cluster and put in the required field
  elasticsearch {
    hosts => ["https://28c933e7f525411f803acfae90bab76f.ap-southeast-1.aws.found.io:9243"]
    user => "elastic"
    password => "vAORFH0zJtacsFnjBOkURKtj"
    index => "operation_clusters"
    query_template => "/etc/logstash/conf.d/data/template-ops-cluster-search.json"
    fields => { "[cluster_id]" => "_cluster_id" }
  }
  if ([_cluster_id]) {
    mutate {
      add_field => {
        "operation_cluster_id" => "%{_cluster_id}"
        "nearest_operation_cluster_id" => "0"
      }
    }
  }
  else {
    mutate {
      add_field => {
        "operation_cluster_id" => "0"
      }
    }
    # ES Query to fetch the nearest operation cluster in case there is no existing operation cluster
    elasticsearch {
      hosts => ["https://28c933e7f525411f803acfae90bab76f.ap-southeast-1.aws.found.io:9243"]
      user => "elastic"
      password => "vAORFH0zJtacsFnjBOkURKtj"
      index => "operation_clusters"
      query_template => "/etc/logstash/conf.d/data/template-ops-cluster-nearest.json"
      fields => { "[cluster_id]" => "_nearest_cluster_id" }
    }
    if ([_nearest_cluster_id]) {
      mutate {
        add_field => {
          "nearest_operation_cluster_id" => "%{_nearest_cluster_id}"
        }
      }
    }
    else {
      mutate {
        add_field => {
          "nearest_operation_cluster_id" => "0"
        }
      }
    }
    mutate {
      remove_field => ["_nearest_cluster_id"]
    }
  }
  mutate {
    remove_field => ["_parking_zone_id", "_cluster_id", "latitude","longitude"]
  }
}

output {
  elasticsearch {
    hosts => ["https://28c933e7f525411f803acfae90bab76f.ap-southeast-1.aws.found.io:9243"]
    user => "elastic"
    password => "vAORFH0zJtacsFnjBOkURKtj"
    manage_template => false
    index => "some-bikes-%{+YYYY.MM.dd}"
    document_type => "_doc"
  }
  stdout  { codec => rubydebug }
}
